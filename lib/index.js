"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.coverityCreateIssueCommentMessage = exports.coverityCreateReviewCommentMessage = exports.coverityCreateNoLongerPresentMessage = exports.coverityIsPresent = exports.COMMENT_PREFACE = exports.COVERITY_COMMENT_PREFACE = exports.coverityMapMatchingMergeKeys = exports.CoverityProjectIssue = exports.cleanUrl = exports.CoverityApiService = exports.githubGetDiffMap = exports.githubCreateIssueComment = exports.githubUpdateExistingIssueComment = exports.githubGetExistingIssueComments = exports.githubCreateReview = exports.githubUpdateExistingReviewComment = exports.githubGetExistingReviewComments = exports.githubGetPullRequestDiff = exports.githubRelativizePath = exports.githubGetPullRequestNumber = exports.githubGetSha = exports.githubIsPullRequest = exports.azGetDiffMap = exports.azCreateReviewComment = exports.azUpdateComment = exports.azGetExistingReviewThreads = exports.sigmaCreateMessageFromIssue = exports.sigmaUuidCommentOf = exports.sigmaIsInDiff = exports.SIGMA_COMMENT_PREFACE = exports.gitlabCreateDiscussion = exports.gitlabUpdateNote = exports.gitlabGetDiffMap = exports.gitlabGetDiscussions = exports.gitlabGetProject = exports.logger = void 0;
var SIGLogger_1 = require("./utils/SIGLogger");
Object.defineProperty(exports, "logger", { enumerable: true, get: function () { return SIGLogger_1.logger; } });
var gitlab_utils_1 = require("./utils/gitlab-utils");
Object.defineProperty(exports, "gitlabGetProject", { enumerable: true, get: function () { return gitlab_utils_1.gitlabGetProject; } });
Object.defineProperty(exports, "gitlabGetDiscussions", { enumerable: true, get: function () { return gitlab_utils_1.gitlabGetDiscussions; } });
Object.defineProperty(exports, "gitlabGetDiffMap", { enumerable: true, get: function () { return gitlab_utils_1.gitlabGetDiffMap; } });
Object.defineProperty(exports, "gitlabUpdateNote", { enumerable: true, get: function () { return gitlab_utils_1.gitlabUpdateNote; } });
Object.defineProperty(exports, "gitlabCreateDiscussion", { enumerable: true, get: function () { return gitlab_utils_1.gitlabCreateDiscussion; } });
var sigma_utils_1 = require("./utils/sigma-utils");
Object.defineProperty(exports, "SIGMA_COMMENT_PREFACE", { enumerable: true, get: function () { return sigma_utils_1.SIGMA_COMMENT_PREFACE; } });
Object.defineProperty(exports, "sigmaIsInDiff", { enumerable: true, get: function () { return sigma_utils_1.sigmaIsInDiff; } });
Object.defineProperty(exports, "sigmaUuidCommentOf", { enumerable: true, get: function () { return sigma_utils_1.sigmaUuidCommentOf; } });
Object.defineProperty(exports, "sigmaCreateMessageFromIssue", { enumerable: true, get: function () { return sigma_utils_1.sigmaCreateMessageFromIssue; } });
var azure_utils_1 = require("./utils/azure-utils");
Object.defineProperty(exports, "azGetExistingReviewThreads", { enumerable: true, get: function () { return azure_utils_1.azGetExistingReviewThreads; } });
Object.defineProperty(exports, "azUpdateComment", { enumerable: true, get: function () { return azure_utils_1.azUpdateComment; } });
Object.defineProperty(exports, "azCreateReviewComment", { enumerable: true, get: function () { return azure_utils_1.azCreateReviewComment; } });
Object.defineProperty(exports, "azGetDiffMap", { enumerable: true, get: function () { return azure_utils_1.azGetDiffMap; } });
var github_utils_1 = require("./utils/github-utils");
Object.defineProperty(exports, "githubIsPullRequest", { enumerable: true, get: function () { return github_utils_1.githubIsPullRequest; } });
Object.defineProperty(exports, "githubGetSha", { enumerable: true, get: function () { return github_utils_1.githubGetSha; } });
Object.defineProperty(exports, "githubGetPullRequestNumber", { enumerable: true, get: function () { return github_utils_1.githubGetPullRequestNumber; } });
Object.defineProperty(exports, "githubRelativizePath", { enumerable: true, get: function () { return github_utils_1.githubRelativizePath; } });
Object.defineProperty(exports, "githubGetPullRequestDiff", { enumerable: true, get: function () { return github_utils_1.githubGetPullRequestDiff; } });
Object.defineProperty(exports, "githubGetExistingReviewComments", { enumerable: true, get: function () { return github_utils_1.githubGetExistingReviewComments; } });
Object.defineProperty(exports, "githubUpdateExistingReviewComment", { enumerable: true, get: function () { return github_utils_1.githubUpdateExistingReviewComment; } });
Object.defineProperty(exports, "githubCreateReview", { enumerable: true, get: function () { return github_utils_1.githubCreateReview; } });
Object.defineProperty(exports, "githubGetExistingIssueComments", { enumerable: true, get: function () { return github_utils_1.githubGetExistingIssueComments; } });
Object.defineProperty(exports, "githubUpdateExistingIssueComment", { enumerable: true, get: function () { return github_utils_1.githubUpdateExistingIssueComment; } });
Object.defineProperty(exports, "githubCreateIssueComment", { enumerable: true, get: function () { return github_utils_1.githubCreateIssueComment; } });
Object.defineProperty(exports, "githubGetDiffMap", { enumerable: true, get: function () { return github_utils_1.githubGetDiffMap; } });
var coverity_api_1 = require("./utils/coverity-api");
Object.defineProperty(exports, "CoverityApiService", { enumerable: true, get: function () { return coverity_api_1.CoverityApiService; } });
Object.defineProperty(exports, "cleanUrl", { enumerable: true, get: function () { return coverity_api_1.cleanUrl; } });
var coverity_issue_mapper_1 = require("./utils/coverity-issue-mapper");
Object.defineProperty(exports, "CoverityProjectIssue", { enumerable: true, get: function () { return coverity_issue_mapper_1.CoverityProjectIssue; } });
Object.defineProperty(exports, "coverityMapMatchingMergeKeys", { enumerable: true, get: function () { return coverity_issue_mapper_1.coverityMapMatchingMergeKeys; } });
var coverity_utils_1 = require("./utils/coverity-utils");
Object.defineProperty(exports, "COVERITY_COMMENT_PREFACE", { enumerable: true, get: function () { return coverity_utils_1.COVERITY_COMMENT_PREFACE; } });
Object.defineProperty(exports, "COMMENT_PREFACE", { enumerable: true, get: function () { return coverity_utils_1.COMMENT_PREFACE; } });
Object.defineProperty(exports, "coverityIsPresent", { enumerable: true, get: function () { return coverity_utils_1.coverityIsPresent; } });
Object.defineProperty(exports, "coverityCreateNoLongerPresentMessage", { enumerable: true, get: function () { return coverity_utils_1.coverityCreateNoLongerPresentMessage; } });
Object.defineProperty(exports, "coverityCreateReviewCommentMessage", { enumerable: true, get: function () { return coverity_utils_1.coverityCreateReviewCommentMessage; } });
Object.defineProperty(exports, "coverityCreateIssueCommentMessage", { enumerable: true, get: function () { return coverity_utils_1.coverityCreateIssueCommentMessage; } });
